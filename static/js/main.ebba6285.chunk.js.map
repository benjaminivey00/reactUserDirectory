{"version":3,"sources":["components/Header.jsx","components/Sort.jsx","components/Employee.jsx","App.js","index.js"],"names":["Header","useSortableData","employees","config","React","useState","sortConfig","setSortConfig","sortedItems","useMemo","sortableItems","sort","a","b","key","direction","requestSort","Employee","props","value","setValue","getClassNamesFor","name","type","autoComplete","placeholder","onChange","e","target","onClick","className","filter","item","title","toLowerCase","includes","first_name","last_name","email","phone","map","emp","id","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yNASeA,MANf,WACI,OACI,qD,qBC+BOC,EAlCS,SAACC,GAA8B,IAAnBC,EAAkB,uDAAT,KAAS,EACdC,IAAMC,SAASF,GADD,mBAC3CG,EAD2C,KAC/BC,EAD+B,KAG5CC,EAAcJ,IAAMK,SAAQ,WAC9B,IAAIC,EAAa,YAAOR,GAYxB,OAXmB,OAAfI,GACAI,EAAcC,MAAK,SAACC,EAAGC,GACnB,OAAID,EAAEN,EAAWQ,KAAOD,EAAEP,EAAWQ,KACD,cAAzBR,EAAWS,WAA6B,EAAI,EAEnDH,EAAEN,EAAWQ,KAAOD,EAAEP,EAAWQ,KACD,cAAzBR,EAAWS,UAA4B,GAAK,EAEhD,KAGRL,IACR,CAACR,EAAWI,IAETU,EAAc,SAACF,GACjB,IAAIC,EAAY,YAEZT,GACAA,EAAWQ,MAAQA,GACM,cAAzBR,EAAWS,YAEXA,EAAY,cAEhBR,EAAc,CAAEO,MAAKC,eAGzB,MAAO,CAAEb,UAAWM,EAAaQ,cAAaV,eC4DnCW,G,MAxFE,SAACC,GAAW,IAAD,EACEb,mBAAS,IADX,mBACjBc,EADiB,KACVC,EADU,OAEuBnB,EAAgBiB,EAAMhB,WAA7DA,EAFgB,EAEhBA,UAAWc,EAFK,EAELA,YAAaV,EAFR,EAEQA,WAC1Be,EAAmB,SAACC,GACtB,OAAKhB,GAGEA,EAAWQ,MAAQQ,EAAOhB,EAAWS,UAFjC,QAIf,OACI,qCACI,uBACIQ,KAAK,OACLC,aAAa,MACbC,YAAY,6BACZN,MAAOA,EACPO,SAAU,SAAAC,GAAC,OAAIP,EAASO,EAAEC,OAAOT,UAErC,kCACI,gCACI,+BAEI,6BACI,wBACII,KAAK,SACLM,QAAS,kBAAMb,EAAY,eAC3Bc,UAAWT,EAAiB,cAHhC,0BAMJ,6BACI,wBACIE,KAAK,SACLM,QAAS,kBAAMb,EAAY,cAC3Bc,UAAWT,EAAiB,aAHhC,yBAMJ,6BACI,wBACIE,KAAK,SACLM,QAAS,kBAAMb,EAAY,UAC3Bc,UAAWT,EAAiB,SAHhC,qBAMJ,6BACI,wBACIE,KAAK,SACLM,QAAS,kBAAMb,EAAY,UAC3Bc,UAAWT,EAAiB,SAHhC,qBAMJ,6BACI,wBACIE,KAAK,SACLM,QAAS,kBAAMb,EAAY,UAC3Bc,UAAWT,EAAiB,SAHhC,iCAQZ,gCACKnB,EACI6B,QAAO,SAAAC,GACJ,OAAKb,MACDa,EAAKC,MAAMC,cAAcC,SAAShB,EAAMe,gBACrCF,EAAKI,WAAWF,cAAcC,SAAShB,EAAMe,gBAC7CF,EAAKK,UAAUH,cAAcC,SAAShB,EAAMe,gBAC5CF,EAAKM,MAAMJ,cAAcC,SAAShB,EAAMe,gBACxCF,EAAKO,MAAML,cAAcC,SAAShB,EAAMe,mBAMlDM,KAAI,SAACC,GAAD,OACD,+BAEI,6BAAKA,EAAIL,aACT,6BAAKK,EAAIJ,YACT,6BAAKI,EAAIR,QACT,6BAAKQ,EAAIH,QACT,oBAAIR,UAAU,QAAd,SAAuBW,EAAIF,UANtBE,EAAIC,iBCzE1B,SAASC,IACtB,OACE,gCACE,cAAC,EAAD,IACA,cAAC,EAAD,CAAUzC,UAAWA,OCN3B0C,IAASC,OACR,cAAC,IAAMC,WAAP,UACC,cAACH,EAAD,MAEDI,SAASC,eAAe,U","file":"static/js/main.ebba6285.chunk.js","sourcesContent":["import React from 'react';\nimport './Header.css'\n\nfunction Header() {\n    return (\n        <h1>Employee Directory</h1>\n    );\n}\n\nexport default Header;","import React from 'react';\n\nconst useSortableData = (employees, config = null) => {\n    const [sortConfig, setSortConfig] = React.useState(config);\n\n    const sortedItems = React.useMemo(() => {\n        let sortableItems = [...employees];\n        if (sortConfig !== null) {\n            sortableItems.sort((a, b) => {\n                if (a[sortConfig.key] < b[sortConfig.key]) {\n                    return sortConfig.direction === 'ascending' ? -1 : 1;\n                }\n                if (a[sortConfig.key] > b[sortConfig.key]) {\n                    return sortConfig.direction === 'ascending' ? 1 : -1;\n                }\n                return 0;\n            });\n        }\n        return sortableItems;\n    }, [employees, sortConfig]);\n\n    const requestSort = (key) => {\n        let direction = 'ascending';\n        if (\n            sortConfig &&\n            sortConfig.key === key &&\n            sortConfig.direction === 'ascending'\n        ) {\n            direction = 'descending';\n        }\n        setSortConfig({ key, direction });\n    };\n\n    return { employees: sortedItems, requestSort, sortConfig };\n};\n\nexport default useSortableData","import React, { useState } from 'react';\nimport useSortableData from './Sort'\nimport './Employee.css'\n\n\nconst Employee = (props) => {\n    const [value, setValue] = useState(\"\");\n    const { employees, requestSort, sortConfig } = useSortableData(props.employees);\n    const getClassNamesFor = (name) => {\n        if (!sortConfig) {\n            return 'sort';\n        }\n        return sortConfig.key === name ? sortConfig.direction : 'sort';\n    };\n    return (\n        <>\n            <input\n                type=\"text\"\n                autoComplete=\"off\"\n                placeholder=\"Enter Search Criteria Here\"\n                value={value}\n                onChange={e => setValue(e.target.value)}\n            />\n            <table>\n                <thead>\n                    <tr>\n                        {/* <th>Avatar</th> */}\n                        <th>\n                            <button\n                                type=\"button\"\n                                onClick={() => requestSort('first_name')}\n                                className={getClassNamesFor('first_name')}\n                            >First Name</button>\n                        </th>\n                        <th>\n                            <button\n                                type=\"button\"\n                                onClick={() => requestSort('last_name')}\n                                className={getClassNamesFor('last_name')}\n                            >Last Name</button>\n                        </th>\n                        <th>\n                            <button\n                                type=\"button\"\n                                onClick={() => requestSort('title')}\n                                className={getClassNamesFor('title')}\n                            >Title</button>\n                        </th>\n                        <th>\n                            <button\n                                type=\"button\"\n                                onClick={() => requestSort('email')}\n                                className={getClassNamesFor('email')}\n                            >Email</button>\n                        </th>\n                        <th>\n                            <button\n                                type=\"button\"\n                                onClick={() => requestSort('phone')}\n                                className={getClassNamesFor('phone')}\n                            >Phone Number</button>\n                        </th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {employees\n                        .filter(item => {\n                            if (!value) return true;\n                            if (item.title.toLowerCase().includes(value.toLowerCase())\n                                || item.first_name.toLowerCase().includes(value.toLowerCase())\n                                || item.last_name.toLowerCase().includes(value.toLowerCase())\n                                || item.email.toLowerCase().includes(value.toLowerCase())\n                                || item.phone.toLowerCase().includes(value.toLowerCase())\n                            ) {\n                                return true;\n                            }\n                            return false;\n                        })\n                        .map((emp) => (\n                            <tr key={emp.id}>\n                                {/* <td><img src={emp.avatar} alt=\"avatar\" /></td> */}\n                                <td>{emp.first_name}</td>\n                                <td>{emp.last_name}</td>\n                                <td>{emp.title}</td>\n                                <td>{emp.email}</td>\n                                <td className='phone'>{emp.phone}</td>\n                            </tr>\n                        ))}\n                </tbody>\n            </table>\n        </>\n    );\n};\nexport default Employee","import React from 'react';\n\nimport Header from './components/Header.jsx'\nimport employees from './employees.json'\nimport Employee from './components/Employee.jsx';\n\nexport default function App() {\n  return (\n    <div>\n      <Header />\n      <Employee employees={employees} />\n    </div >\n  );\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n"],"sourceRoot":""}